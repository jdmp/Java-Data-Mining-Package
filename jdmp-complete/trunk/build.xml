<?xml version="1.0"?>
<project name="ujmp-and-jdmp" basedir="." default="run">


	<!--************************************************************************
	*                                                                          *
	*                       Ant Script for UJMP and JDMP                       *	
	*        Universal Java Matrix Package and Java Data Mining Package        *
	*                     Copyright (C) Holger Arndt 2009                      *
	*                           mail@holger-arndt.de                           *
	*                                                                        -->

	<property name="ujmp.version" value="0.2.4" />
	<property name="jdmp.version" value="0.1.2" />

	<!--                                                                       *
	*                                                                          *
	*  This script provides an easy way to check out the source code and       *
	*  build UJMP or JDMP from scratch. See the homepages of the projects for  *
	*  more information: http://www.ujmp.org/ and http://www.jdmp.org/         *
	*                                                                          *
	*  ######################################################################  *
	*  ####   Third party libraries will be downloaded automatically,   #####  *
	*  ######   BUT YOU MUST BE CAREFUL ABOUT THEIR LICENSING TERMS,  #######  *
	*  ############   because not all of them are GPL or LGPL!   ############  *
	*  ######################################################################  *
	*                                                                          *
	*  Change this value to match the project you wish to build:             -->

	<property name="default-project" value="jdmp-gui" />

	<!-- ujmp-core      (basic matrix implementations and functions)           *
	*    ujmp-gui       (visualization methods for date in matrix format)      *
	*    jdmp-core      (machine learning algorithms for Samples and Datasets) *
	*    ujmp-gui       (visualization methods for machine learning)           *
	*    ujmp-complete  (everything for matrices, needs lots of dependencies)  *
	*    jdmp-complete  (really everything for matrices and machine learning)  *
	*                                                                          *
	*  You should start from top to bottom, jdmp-complete requires many        *
	*  dependencies and I really mean A LOT! Try ujmp-core first to see if     *
	*  your environment is set up correctly. You need Java 1.6, ant, svn,      *
	*  and a working internet connection to run this ant script.               *
	*                                                                          *
	*  After that you can use the following commands to handle the projects    *
	*  relevant to you:                                                        *
	*                                                                          *
	*    ant checkout         (get the source code from SVN)                   *
	*    ant update           (update the source code from SVN)                *
	*    ant build            (compile the source files to class files)        *
	*    ant package          (create jar files for the selected project)      *
	*    ant run              (run the main method of the selected project)    *
	*    ant clean            (delete the compiled class files)                *
	*    ant clean-all        (delete source, classes and jars)                *
	*    ant clean-libs       (delete downloaded or compiled libraries)        *
	*    ant clean-sources    (delete the source files)                        *
	*                                                                          *
	*  Alternatively, you can specify another project, by invokin e.g.         *
	*    ant package-ujmp-gui    or   ant run-jdmp-core                        *
	*                                                                          *
	*  If you have questions or experience problems, our public forum is a     *
	*  good place to go:                                                       *
	*                                                                          *
	*  http://www.ujmp.org/forum    or    http://www.jdmp.org/forum            *
	*                                                                          *
	*                                                            Have fun!     *
	*                                                                          *
	*************************************************************************-->


	<property name="src.dir" value="src/main/java" />
	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="lib.dir" value="lib" />
	<property name="tmp.dir" value="tmp" />



	<property name="ujmp-core.main-class" value="org.ujmp.core.UJMP" />
	<property name="ujmp-gui.main-class" value="org.ujmp.gui.UJMP" />
	<property name="jdmp-core.main-class" value="org.jdmp.core.JDMP" />
	<property name="jdmp-gui.main-class" value="org.jdmp.gui.JDMP" />

	<property name="junit.url" value="http://downloads.sourceforge.net/junit/junit-4.5.jar" />
	<property name="colt.url" value="http://acs.lbl.gov/~hoschek/colt-download/releases/colt-1.2.0.zip" />
	<property name="jbpcafill.url" value="http://hawaii.aist-nara.ac.jp/~shige-o/tools/sources/JBPCAfill.jar" />


	<property environment="env" />
	<property name="author" value="Holger Arndt" />
	<property name="svnuser" value="${env.svnuser}" />
	<property name="svnpass" value="${env.svnpass}" />

	<property name="ujmp.svn" value="https://ujmp.svn.sourceforge.net/svnroot/ujmp" />
	<property name="jdmp.svn" value="https://jdmp.svn.sourceforge.net/svnroot/jdmp" />

	<target name="jdmp-complete-libraries" depends="junit,ujmp-complete-libraries,jdmp-core,jdmp-gui" />
	<target name="jdmp-core-libraries" depends="junit,ujmp-core" />
	<target name="jdmp-gui-libraries" depends="junit,ujmp-core,ujmp-gui,jdmp-core" />

	<target name="ujmp-complete-libraries" depends="junit,ujmp-core,ujmp-gui,ujmp-bpca,ujmp-colt" />
	<target name="ujmp-core-libraries" depends="junit" />
	<target name="ujmp-gui-libraries" depends="junit,ujmp-core" />
	<target name="ujmp-bpca-libraries" depends="junit,ujmp-core,jbpcafill" />
	<target name="ujmp-colt-libraries" depends="junit,ujmp-core,colt" />




	<target name="checkout">
		<antcall target="checkout-${default-project}">
		</antcall>
	</target>
	<target name="update">
		<antcall target="update-${default-project}">
		</antcall>
	</target>
	<target name="build">
		<antcall target="build-${default-project}">
		</antcall>
	</target>
	<target name="package">
		<antcall target="package-${default-project}">
		</antcall>
	</target>
	<target name="run">
		<antcall target="run-${default-project}">
		</antcall>
	</target>



	<target name="init" depends="create-directories,find-libraries,find-sources" />


	<target name="create-directories">
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${tmp.dir}" />
	</target>



	<target name="clean-all" depends="clean-sources,clean-libs,clean" />

	<target name="clean" depends="clean-tmp">
		<delete dir="${build.dir}" />
	</target>

	<target name="clean-sources">
		<delete dir="ujmp-core" />
		<delete dir="ujmp-gui" />
		<delete dir="ujmp-bpca" />
		<delete dir="ujmp-colt" />
		<delete dir="jdmp-core" />
		<delete dir="jdmp-gui" />
	</target>


	<target name="clean-libs">
		<delete dir="${lib.dir}" />
	</target>

	<target name="clean-tmp">
		<delete dir="${tmp.dir}" />
	</target>




	<target name="build-ujmp-core" depends="checkout-ujmp-core,ujmp-core-libraries" unless="ujmp-core-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="ujmp-core" destdir="${classes.dir}" classpathref="classpath" />
	</target>

	<target name="build-ujmp-gui" depends="checkout-ujmp-gui,ujmp-gui-libraries" unless="ujmp-gui-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="ujmp-gui" destdir="${classes.dir}" classpathref="classpath" />
	</target>

	<target name="build-ujmp-bpca" depends="checkout-ujmp-bpca,ujmp-core-libraries,ujmp-bpca-libraries" unless="ujmp-bpca-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="ujmp-bpca" destdir="${classes.dir}" classpathref="classpath" />
	</target>

	<target name="build-ujmp-colt" depends="checkout-ujmp-colt,ujmp-core-libraries,ujmp-colt-libraries" unless="ujmp-colt-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="ujmp-colt" destdir="${classes.dir}" classpathref="classpath" />
	</target>

	<target name="build-jdmp-core" depends="checkout-jdmp-core,jdmp-core-libraries" unless="jdmp-core-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="jdmp-core" destdir="${classes.dir}" classpathref="classpath" />
		<copy file="jdmp-core/src/main/java/org/jdmp/core/script/jdmp/lexer/lexer.dat" tofile="${classes.dir}/org/jdmp/core/script/jdmp/lexer/lexer.dat" />
		<copy file="jdmp-core/src/main/java/org/jdmp/core/script/jdmp/parser/parser.dat" tofile="${classes.dir}/org/jdmp/core/script/jdmp/parser/parser.dat" />
	</target>

	<target name="build-jdmp-gui" depends="checkout-jdmp-gui,jdmp-gui-libraries" unless="jdmp-gui-lib.exists">
		<mkdir dir="${classes.dir}" />
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<javac compiler="javac1.6" srcdir="jdmp-gui" destdir="${classes.dir}" classpathref="classpath" />
	</target>




	<target name="ujmp-core" depends="init,build-ujmp-core" unless="ujmp-core-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/ujmp-core-${ujmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${ujmp-core.main-class}" />
				<attribute name="Package-Title" value="ujmp-core" />
				<attribute name="Package-Version" value="${ujmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>

	<target name="ujmp-gui" depends="init,build-ujmp-gui" unless="ujmp-gui-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/ujmp-gui-${ujmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${ujmp-gui.main-class}" />
				<attribute name="Package-Title" value="ujmp-gui" />
				<attribute name="Package-Version" value="${ujmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>

	<target name="ujmp-bpca" depends="init,build-ujmp-bpca" unless="ujmp-bpca-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/ujmp-bpca-${ujmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${ujmp-core.main-class}" />
				<attribute name="Package-Title" value="ujmp-bpca" />
				<attribute name="Package-Version" value="${ujmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>

	<target name="ujmp-colt" depends="init,build-ujmp-colt" unless="ujmp-colt-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/ujmp-colt-${ujmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${ujmp-core.main-class}" />
				<attribute name="Package-Title" value="ujmp-colt" />
				<attribute name="Package-Version" value="${ujmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>

	<target name="jdmp-core" depends="init,build-jdmp-core" unless="jdmp-core-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/jdmp-core-${jdmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${jdmp-core.main-class}" />
				<attribute name="Package-Title" value="jdmp-core" />
				<attribute name="Package-Version" value="${jdmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>

	<target name="jdmp-gui" depends="init,build-jdmp-gui" unless="jdmp-gui-lib.exists">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/jdmp-gui-${jdmp.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${jdmp-gui.main-class}" />
				<attribute name="Package-Title" value="jdmp-core" />
				<attribute name="Package-Version" value="${jdmp.version}" />
				<attribute name="Package-Vendor" value="${author}" />
			</manifest>
		</jar>
	</target>




	<target name="run-ujmp-core" depends="ujmp-core">
		<java jar="${jar.dir}/ujmp-core-${ujmp.version}.jar" fork="true" />
	</target>

	<target name="run-ujmp-gui" depends="ujmp-gui">
		<java jar="${jar.dir}/ujmp-gui-${ujmp.version}.jar" fork="true" />
	</target>

	<target name="run-jdmp-core" depends="jdmp-core">
		<java jar="${jar.dir}/jdmp-core-${jdmp.version}.jar" fork="true" />
	</target>

	<target name="run-jdmp-gui" depends="jdmp-gui">
		<java jar="${jar.dir}/jdmp-gui-${jdmp.version}.jar" fork="true" />
	</target>



	<target name="checkout-ujmp-core" depends="init" unless="ujmp-core-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${ujmp.svn}/ujmp-core/trunk" />
			<arg value="ujmp-core" />
		</exec>
	</target >

	<target name="checkout-ujmp-gui" depends="init,checkout-ujmp-core" unless="ujmp-gui-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${ujmp.svn}/ujmp-gui/trunk" />
			<arg value="ujmp-gui" />
		</exec>
	</target>

	<target name="checkout-ujmp-bpca" depends="init,checkout-ujmp-core" unless="ujmp-bpca-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${ujmp.svn}/ujmp-bpca/trunk" />
			<arg value="ujmp-bpca" />
		</exec>
	</target >

	<target name="checkout-ujmp-colt" depends="init,checkout-ujmp-core" unless="ujmp-colt-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${ujmp.svn}/ujmp-colt/trunk" />
			<arg value="ujmp-colt" />
		</exec>
	</target>

	<target name="checkout-jdmp-core" depends="init,checkout-ujmp-core" unless="jdmp-core-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${jdmp.svn}/jdmp-core/trunk" />
			<arg value="jdmp-core" />
		</exec>
	</target>

	<target name="checkout-jdmp-gui" depends="init,checkout-jdmp-core,checkout-ujmp-core,checkout-ujmp-gui" unless="jdmp-gui-source.exists">
		<echo>Checking out source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="co" />
			<arg value="${jdmp.svn}/jdmp-gui/trunk" />
			<arg value="jdmp-gui" />
		</exec>
	</target>




	<target name="update-ujmp-core" depends="checkout-ujmp-core">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${ujmp.svn}/ujmp-core/trunk" />
			<arg value="ujmp-core" />
		</exec>
	</target >

	<target name="update-ujmp-gui" depends="checkout-ujmp-gui,update-ujmp-core">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${ujmp.svn}/ujmp-gui/trunk" />
			<arg value="ujmp-gui" />
		</exec>
	</target >

	<target name="update-ujmp-bpca" depends="checkout-ujmp-bpca,update-ujmp-core">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${ujmp.svn}/ujmp-bpca/trunk" />
			<arg value="ujmp-bpca" />
		</exec>
	</target >

	<target name="update-ujmp-colt" depends="checkout-ujmp-colt,update-ujmp-core">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${ujmp.svn}/ujmp-colt/trunk" />
			<arg value="ujmp-colt" />
		</exec>
	</target >

	<target name="update-jdmp-core" depends="checkout-jdmp-core,update-ujmp-core">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${jdmp.svn}/jdmp-core/trunk" />
			<arg value="jdmp-core" />
		</exec>
	</target >

	<target name="update-jdmp-gui" depends="checkout-jdmp-gui,update-jdmp-core,update-ujmp-core,update-ujmp-gui">
		<echo>Updating source code from SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="update" />
			<arg value="${jdmp.svn}/jdmp-gui/trunk" />
			<arg value="jdmp-gui" />
		</exec>
	</target >








	<target name="find-libraries">
		<available file="${jar.dir}/ujmp-core-${ujmp.version}.jar" property="ujmp-core-lib.exists" />
		<available file="${jar.dir}/ujmp-gui-${ujmp.version}.jar" property="ujmp-gui-lib.exists" />
		<available file="${jar.dir}/ujmp-bpca-${ujmp.version}.jar" property="ujmp-bpca-lib.exists" />
		<available file="${jar.dir}/ujmp-colt-${ujmp.version}.jar" property="ujmp-colt-lib.exists" />
		<available file="${jar.dir}/jdmp-core-${jdmp.version}.jar" property="jdmp-core-lib.exists" />
		<available file="${jar.dir}/jdmp-gui-${jdmp.version}.jar" property="jdmp-gui-lib.exists" />
		<available file="${lib.dir}/junit.jar" property="junit.exists" />
		<available file="${lib.dir}/colt.jar" property="colt.exists" />
		<available file="${lib.dir}/jbpcafill.jar" property="jbpcafill.exists" />
	</target>

	<target name="find-sources">
		<available file="ujmp-core" property="ujmp-core-source.exists" />
		<available file="ujmp-gui" property="ujmp-gui-source.exists" />
		<available file="ujmp-bpca" property="ujmp-bpca-source.exists" />
		<available file="ujmp-colt" property="ujmp-colt-source.exists" />
		<available file="jdmp-core" property="jdmp-core-source.exists" />
		<available file="jdmp-gui" property="jdmp-gui-source.exists" />
	</target>



	<target name="junit" depends="init" unless="junit.exists">
		<get src="${junit.url}" dest="${lib.dir}/junit.jar" />
	</target>

	<target name="jbpcafill" depends="init" unless="jbpcafill.exists">
		<get src="${jbpcafill.url}" dest="${lib.dir}/jbpcafill.jar" />
	</target>

	<target name="colt" depends="init" unless="colt.exists">
		<get src="${colt.url}" dest="${tmp.dir}/colt.zip" />
		<unzip src="${tmp.dir}/colt.zip" dest="${lib.dir}">
			<patternset>
				<include name="**/*.jar" />
			</patternset>
			<mapper type="flatten" />
		</unzip>
	</target>


	<target name="ujmp-tag-version">
		<echo>Creating version tags in SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp/trunk" />
			<arg value="${ujmp.svn}/ujmp/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-bpca/trunk" />
			<arg value="${ujmp.svn}/ujmp-bpca/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-colt/trunk" />
			<arg value="${ujmp.svn}/ujmp-colt/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-commonsmath/trunk" />
			<arg value="${ujmp.svn}/ujmp-commonsmath/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-complete/trunk" />
			<arg value="${ujmp.svn}/ujmp-complete/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-core/trunk" />
			<arg value="${ujmp.svn}/ujmp-core/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-gui/trunk" />
			<arg value="${ujmp.svn}/ujmp-gui/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-hadoop/trunk" />
			<arg value="${ujmp.svn}/ujmp-hadoop/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-itext/trunk" />
			<arg value="${ujmp.svn}/ujmp-itext/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jackcess/trunk" />
			<arg value="${ujmp.svn}/ujmp-jackcess/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jama/trunk" />
			<arg value="${ujmp.svn}/ujmp-jama/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jdbc/trunk" />
			<arg value="${ujmp.svn}/ujmp-jdbc/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jexcelapi/trunk" />
			<arg value="${ujmp.svn}/ujmp-jexcelapi/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jmathplot/trunk" />
			<arg value="${ujmp.svn}/ujmp-jmathplot/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jmatio/trunk" />
			<arg value="${ujmp.svn}/ujmp-jmatio/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jmatrices/trunk" />
			<arg value="${ujmp.svn}/ujmp-jmatrices/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jsci/trunk" />
			<arg value="${ujmp.svn}/ujmp-jsci/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jscience/trunk" />
			<arg value="${ujmp.svn}/ujmp-jscience/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-jung/trunk" />
			<arg value="${ujmp.svn}/ujmp-jung/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-lsimpute/trunk" />
			<arg value="${ujmp.svn}/ujmp-lsimpute/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-lucene/trunk" />
			<arg value="${ujmp.svn}/ujmp-lucene/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-mail/trunk" />
			<arg value="${ujmp.svn}/ujmp-mail/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-mantissa/trunk" />
			<arg value="${ujmp.svn}/ujmp-mantissa/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-mtj/trunk" />
			<arg value="${ujmp.svn}/ujmp-mtj/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-ojalgo/trunk" />
			<arg value="${ujmp.svn}/ujmp-ojalgo/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-parallelcolt/trunk" />
			<arg value="${ujmp.svn}/ujmp-parallelcolt/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-pdfbox/trunk" />
			<arg value="${ujmp.svn}/ujmp-pdfbox/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-sst/trunk" />
			<arg value="${ujmp.svn}/ujmp-sst/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${ujmp.svn}/ujmp-vecmath/trunk" />
			<arg value="${ujmp.svn}/ujmp-vecmath/tags/${ujmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
	</target >

	<target name="jdmp-tag-version">
		<echo>Creating version tags in SVN, please be patient</echo>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp/trunk" />
			<arg value="${jdmp.svn}/jdmp/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-bsh/trunk" />
			<arg value="${jdmp.svn}/jdmp-bsh/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-complete/trunk" />
			<arg value="${jdmp.svn}/jdmp-complete/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-core/trunk" />
			<arg value="${jdmp.svn}/jdmp-core/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-ehcache/trunk" />
			<arg value="${jdmp.svn}/jdmp-ehcache/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-gui/trunk" />
			<arg value="${jdmp.svn}/jdmp-gui/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-jetty/trunk" />
			<arg value="${jdmp.svn}/jdmp-jetty/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-jgroups/trunk" />
			<arg value="${jdmp.svn}/jdmp-jgroups/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-liblinear/trunk" />
			<arg value="${jdmp.svn}/jdmp-liblinear/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-libsvm/trunk" />
			<arg value="${jdmp.svn}/jdmp-libsvm/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-lucene/trunk" />
			<arg value="${jdmp.svn}/jdmp-lucene/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-mallet/trunk" />
			<arg value="${jdmp.svn}/jdmp-mallet/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-stanfordpos/trunk" />
			<arg value="${jdmp.svn}/jdmp-stanfordpos/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
		<exec executable="svn">
			<arg value="copy" />
			<arg value="${jdmp.svn}/jdmp-weka/trunk" />
			<arg value="${jdmp.svn}/jdmp-weka/tags/${jdmp.version}" />
			<arg value="--username" />
			<arg value="${svnuser}" />
			<arg value="--password" />
			<arg value="${svnpass}" />
			<arg value="--non-interactive" />
			<arg value="--message" />
			<arg value="version tag created" />
		</exec>
	</target >


</project>
