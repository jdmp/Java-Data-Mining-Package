/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jdmp.core.script.jdmp.node;

import org.jdmp.core.script.jdmp.analysis.*;

@SuppressWarnings("nls")
public final class AComplementLevel2 extends PLevel2
{
    private TComplement _complement_;
    private PLevel1 _level1_;

    public AComplementLevel2()
    {
        // Constructor
    }

    public AComplementLevel2(
        @SuppressWarnings("hiding") TComplement _complement_,
        @SuppressWarnings("hiding") PLevel1 _level1_)
    {
        // Constructor
        setComplement(_complement_);

        setLevel1(_level1_);

    }

    
    public Object clone()
    {
        return new AComplementLevel2(
            cloneNode(this._complement_),
            cloneNode(this._level1_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComplementLevel2(this);
    }

    public TComplement getComplement()
    {
        return this._complement_;
    }

    public void setComplement(TComplement node)
    {
        if(this._complement_ != null)
        {
            this._complement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._complement_ = node;
    }

    public PLevel1 getLevel1()
    {
        return this._level1_;
    }

    public void setLevel1(PLevel1 node)
    {
        if(this._level1_ != null)
        {
            this._level1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._level1_ = node;
    }

    
    public String toString()
    {
        return ""
            + toString(this._complement_)
            + toString(this._level1_);
    }

    
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._complement_ == child)
        {
            this._complement_ = null;
            return;
        }

        if(this._level1_ == child)
        {
            this._level1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._complement_ == oldChild)
        {
            setComplement((TComplement) newChild);
            return;
        }

        if(this._level1_ == oldChild)
        {
            setLevel1((PLevel1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
