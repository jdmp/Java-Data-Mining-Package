/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jdmp.core.script.jdmp.node;

import org.jdmp.core.script.jdmp.analysis.Analysis;

@SuppressWarnings("nls")
public final class ADotPowerLevel1 extends PLevel1 {
	private PLevel1 _left_;
	private TDotPower _dotPower_;
	private PLevel0 _right_;

	public ADotPowerLevel1() {
		// Constructor
	}

	public ADotPowerLevel1(@SuppressWarnings("hiding") PLevel1 _left_,
			@SuppressWarnings("hiding") TDotPower _dotPower_,
			@SuppressWarnings("hiding") PLevel0 _right_) {
		// Constructor
		setLeft(_left_);

		setDotPower(_dotPower_);

		setRight(_right_);

	}

	public Object clone() {
		return new ADotPowerLevel1(cloneNode(this._left_), cloneNode(this._dotPower_),
				cloneNode(this._right_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseADotPowerLevel1(this);
	}

	public PLevel1 getLeft() {
		return this._left_;
	}

	public void setLeft(PLevel1 node) {
		if (this._left_ != null) {
			this._left_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._left_ = node;
	}

	public TDotPower getDotPower() {
		return this._dotPower_;
	}

	public void setDotPower(TDotPower node) {
		if (this._dotPower_ != null) {
			this._dotPower_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._dotPower_ = node;
	}

	public PLevel0 getRight() {
		return this._right_;
	}

	public void setRight(PLevel0 node) {
		if (this._right_ != null) {
			this._right_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._right_ = node;
	}

	public String toString() {
		return "" + toString(this._left_) + toString(this._dotPower_) + toString(this._right_);
	}

	void removeChild(@SuppressWarnings("unused") Node child) {
		// Remove child
		if (this._left_ == child) {
			this._left_ = null;
			return;
		}

		if (this._dotPower_ == child) {
			this._dotPower_ = null;
			return;
		}

		if (this._right_ == child) {
			this._right_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	void replaceChild(@SuppressWarnings("unused") Node oldChild,
			@SuppressWarnings("unused") Node newChild) {
		// Replace child
		if (this._left_ == oldChild) {
			setLeft((PLevel1) newChild);
			return;
		}

		if (this._dotPower_ == oldChild) {
			setDotPower((TDotPower) newChild);
			return;
		}

		if (this._right_ == oldChild) {
			setRight((PLevel0) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
