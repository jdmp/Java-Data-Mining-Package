/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jdmp.core.script.jdmp.node;

import org.jdmp.core.script.jdmp.analysis.Analysis;

@SuppressWarnings("nls")
public final class AArrayAssignment extends PAssignment {
	private PFunction _function_;
	private TAssign _assign_;
	private PExpression _expression_;
	private TSemicolon _semicolon_;

	public AArrayAssignment() {
		// Constructor
	}

	public AArrayAssignment(@SuppressWarnings("hiding") PFunction _function_,
			@SuppressWarnings("hiding") TAssign _assign_,
			@SuppressWarnings("hiding") PExpression _expression_,
			@SuppressWarnings("hiding") TSemicolon _semicolon_) {
		// Constructor
		setFunction(_function_);

		setAssign(_assign_);

		setExpression(_expression_);

		setSemicolon(_semicolon_);

	}

	public Object clone() {
		return new AArrayAssignment(cloneNode(this._function_), cloneNode(this._assign_),
				cloneNode(this._expression_), cloneNode(this._semicolon_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAArrayAssignment(this);
	}

	public PFunction getFunction() {
		return this._function_;
	}

	public void setFunction(PFunction node) {
		if (this._function_ != null) {
			this._function_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._function_ = node;
	}

	public TAssign getAssign() {
		return this._assign_;
	}

	public void setAssign(TAssign node) {
		if (this._assign_ != null) {
			this._assign_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._assign_ = node;
	}

	public PExpression getExpression() {
		return this._expression_;
	}

	public void setExpression(PExpression node) {
		if (this._expression_ != null) {
			this._expression_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._expression_ = node;
	}

	public TSemicolon getSemicolon() {
		return this._semicolon_;
	}

	public void setSemicolon(TSemicolon node) {
		if (this._semicolon_ != null) {
			this._semicolon_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._semicolon_ = node;
	}

	public String toString() {
		return "" + toString(this._function_) + toString(this._assign_)
				+ toString(this._expression_) + toString(this._semicolon_);
	}

	void removeChild(@SuppressWarnings("unused") Node child) {
		// Remove child
		if (this._function_ == child) {
			this._function_ = null;
			return;
		}

		if (this._assign_ == child) {
			this._assign_ = null;
			return;
		}

		if (this._expression_ == child) {
			this._expression_ = null;
			return;
		}

		if (this._semicolon_ == child) {
			this._semicolon_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	void replaceChild(@SuppressWarnings("unused") Node oldChild,
			@SuppressWarnings("unused") Node newChild) {
		// Replace child
		if (this._function_ == oldChild) {
			setFunction((PFunction) newChild);
			return;
		}

		if (this._assign_ == oldChild) {
			setAssign((TAssign) newChild);
			return;
		}

		if (this._expression_ == oldChild) {
			setExpression((PExpression) newChild);
			return;
		}

		if (this._semicolon_ == oldChild) {
			setSemicolon((TSemicolon) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
