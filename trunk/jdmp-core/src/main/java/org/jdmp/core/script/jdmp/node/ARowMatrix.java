/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jdmp.core.script.jdmp.node;

import org.jdmp.core.script.jdmp.analysis.Analysis;

@SuppressWarnings("nls")
public final class ARowMatrix extends PMatrix {
	private TLBracket _lBracket_;
	private PRow _row_;
	private TRBracket _rBracket_;

	public ARowMatrix() {
		// Constructor
	}

	public ARowMatrix(@SuppressWarnings("hiding") TLBracket _lBracket_,
			@SuppressWarnings("hiding") PRow _row_, @SuppressWarnings("hiding") TRBracket _rBracket_) {
		// Constructor
		setLBracket(_lBracket_);

		setRow(_row_);

		setRBracket(_rBracket_);

	}

	public Object clone() {
		return new ARowMatrix(cloneNode(this._lBracket_), cloneNode(this._row_),
				cloneNode(this._rBracket_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseARowMatrix(this);
	}

	public TLBracket getLBracket() {
		return this._lBracket_;
	}

	public void setLBracket(TLBracket node) {
		if (this._lBracket_ != null) {
			this._lBracket_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._lBracket_ = node;
	}

	public PRow getRow() {
		return this._row_;
	}

	public void setRow(PRow node) {
		if (this._row_ != null) {
			this._row_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._row_ = node;
	}

	public TRBracket getRBracket() {
		return this._rBracket_;
	}

	public void setRBracket(TRBracket node) {
		if (this._rBracket_ != null) {
			this._rBracket_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._rBracket_ = node;
	}

	public String toString() {
		return "" + toString(this._lBracket_) + toString(this._row_) + toString(this._rBracket_);
	}

	void removeChild(@SuppressWarnings("unused") Node child) {
		// Remove child
		if (this._lBracket_ == child) {
			this._lBracket_ = null;
			return;
		}

		if (this._row_ == child) {
			this._row_ = null;
			return;
		}

		if (this._rBracket_ == child) {
			this._rBracket_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	void replaceChild(@SuppressWarnings("unused") Node oldChild,
			@SuppressWarnings("unused") Node newChild) {
		// Replace child
		if (this._lBracket_ == oldChild) {
			setLBracket((TLBracket) newChild);
			return;
		}

		if (this._row_ == oldChild) {
			setRow((PRow) newChild);
			return;
		}

		if (this._rBracket_ == oldChild) {
			setRBracket((TRBracket) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
